---
swagger: "2.0"
info:
  description: duberton-fm API
  title: duberton-fm
  version: "1.0"
schemes:
  - https
securityDefinitions:
  oauth2:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: COGNITO_USER_POOLS
    x-amazon-apigateway-authorizer:
      type: COGNITO_USER_POOLS
      providerARNs:
        - "${cognito_user_pool_id}"
paths:
  "/v1/tracks":
    post:
      security:
        - oauth2: ["https://dubertonfm.com/write"]
      tags:
        - Tracks
      operationId: CreateTrack
      summary: Create a track
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: NewTrack
          required: true
          schema:
            "$ref": "#/definitions/CreateTrackRequest"
      responses:
        "200":
          description: Success
          schema:
            "$ref": "#/definitions/CreateTrackResponse"
      x-amazon-apigateway-request-validator: "post-track"
      x-amazon-apigateway-integration:
        uri: "${aws_sns_path_uri}"
        credentials: "${api_gateway_role_arn}"
        payloadFormatVersion: 1.0
        httpMethod: POST
        type: AWS
        timeoutInMillis: 2000
        requestParameters:
          "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'"
        requestTemplates:
          "application/json": "Action=Publish&TopicArn=$util.urlEncode('${aws_sns_topic_arn}')&Message=$util.urlEncode($input.body)"
        responses:
          "200":
            statusCode: "200"
            responseTemplates:
              application/json: '{"status": "SUCCESS"}'
    get:
      tags:
        - Tracks
      operationId: GetTracks
      summary: Get tracks
      produces:
        - application/json
      parameters:
        - in: query
          name: day
          required: true
          schema:
            type: integer
        - in: query
          name: month
          required: true
          schema:
            type: integer
        - in: query
          name: year
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Success
          schema:
            "$ref": "#/definitions/Tracks"
      x-amazon-apigateway-integration:
        uri: "${lambda_query_invoke_arn}"
        credentials: "${api_gateway_role_arn}"
        payloadFormatVersion: 1.0
        httpMethod: POST
        type: AWS_PROXY
        timeoutInMillis: 2000
        responses:
          "200":
            statusCode: "200"
x-amazon-apigateway-request-validators:
  post-track:
    validateRequestParameters: false
    validateRequestBody: true
definitions:
  Tracks:
    type: array
    items:
      "$ref": "#/definitions/Track"
  Track:
    type: object
    properties:
      id:
        type: string
      artist:
        type: string
      title:
        type: string
      album:
        type: string
      hash:
        type: string
  CreateTrackRequest:
    type: object
    required: [artist, title, album, hash]
    properties:
      artist:
        type: string
      title:
        type: string
      album:
        type: string
      hash:
        type: string
  CreateTrackResponse:
    type: object
    properties:
      id:
        type: string
      artist:
        type: string
      title:
        type: string
      album:
        type: string
      hash:
        type: string
